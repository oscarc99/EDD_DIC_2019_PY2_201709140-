/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import EDD.NodeLD;
import Hilos.*;

import Object.User;
import java.awt.event.KeyEvent;
import java.io.File;

import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import proyecto_2.Proyecto_2;

/**
 *
 * @author Oscar C
 */
public class AVLTree extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form AVLTree
     */
    User u;
    NodeLD as;
    Thread actualizar;
    Thread mostrar;
    NodeLD first;
    int manualInorden = 0;
    int manualPostorden = 0;
    int manualPreorden = 0;
    boolean flagInorden = true;

    public AVLTree(User X) {
        initComponents();
        this.u = X;
        this.setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonBack = new javax.swing.JButton();
        jSlider = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jButtonInsert = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jTextFieldDelete = new javax.swing.JTextField();
        Cargar = new javax.swing.JButton();
        jCBTipo = new javax.swing.JComboBox();
        jLabel = new javax.swing.JLabel();
        jLabelDesc = new javax.swing.JLabel();
        jButtonInorden = new javax.swing.JButton();
        jButtonPostorden = new javax.swing.JButton();
        jButtonPreorden = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabelRecorrido = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane = new javax.swing.JScrollPane();
        jLabelImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AVL Tree Module");
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonBack.setText("Regresar");
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 30, 95, -1));

        jSlider.setMajorTickSpacing(1);
        jSlider.setMinimum(1);
        jSlider.setPaintTicks(true);
        jSlider.setToolTipText("");
        jSlider.setValue(5);
        jSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderStateChanged(evt);
            }
        });
        getContentPane().add(jSlider, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 40, 134, -1));

        jLabel1.setText("Velocidad: ");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 20, -1, -1));

        jButtonInsert.setText("Insertar");
        jButtonInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonInsert, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 30, 88, -1));

        jButtonDelete.setText("Eliminar");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 30, 88, -1));

        jTextFieldDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDeleteActionPerformed(evt);
            }
        });
        jTextFieldDelete.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldDeleteKeyPressed(evt);
            }
        });
        getContentPane().add(jTextFieldDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 30, 103, -1));

        Cargar.setText("Carga");
        Cargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CargarActionPerformed(evt);
            }
        });
        getContentPane().add(Cargar, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, 88, -1));

        jCBTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Automatico", "Manual" }));
        jCBTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBTipoActionPerformed(evt);
            }
        });
        getContentPane().add(jCBTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));
        getContentPane().add(jLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 400, 170, 30));
        getContentPane().add(jLabelDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 450, 210, 90));

        jButtonInorden.setText("Inorden");
        jButtonInorden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInordenActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonInorden, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 10, 110, -1));

        jButtonPostorden.setText("Postorden");
        jButtonPostorden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPostordenActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonPostorden, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 10, 110, -1));

        jButtonPreorden.setText("Preorden");
        jButtonPreorden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPreordenActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonPreorden, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 50, 110, -1));

        jLabel2.setText("Recorrido");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 40, -1, -1));
        getContentPane().add(jLabelRecorrido, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 230, 280, 40));

        jLabel3.setText("Recorrido:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 200, -1, -1));

        jLabel4.setText("Descripcion");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 360, -1, -1));

        jScrollPane.setViewportView(jLabelImage);

        getContentPane().add(jScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 890, 430));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        Usuario ventanA = new Usuario(this.u);
        this.setVisible(false);
        ventanA.setVisible(true);
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void jSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderStateChanged
        System.out.println(jSlider.getValue());
    }//GEN-LAST:event_jSliderStateChanged

    private void jTextFieldDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDeleteActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        ImageIcon icono = new ImageIcon("src\\Imagenes\\AVLTree.png");
        icono.getImage().flush();
        jLabelImage.setIcon(icono);
        jLabelImage.revalidate();
        jLabelImage.validate();
        jLabelImage.repaint();

        jScrollPane.revalidate();
        jScrollPane.validate();
        jScrollPane.repaint();

        if (Proyecto_2.avl.search(Integer.parseInt(jTextFieldDelete.getText()))) {
            DeleteAVL n = new DeleteAVL(jLabel, Integer.parseInt(jTextFieldDelete.getText()), jSlider.getValue(), jLabelDesc, jLabelImage, jScrollPane);
            n.start();
        } else {
            JOptionPane.showMessageDialog(null, "Dato no existe");
        }
        icono = new ImageIcon("src\\Imagenes\\AVLTree.png");
        icono.getImage().flush();
        jLabelImage.setIcon(icono);
        jLabelImage.revalidate();
        jLabelImage.validate();
        jLabelImage.repaint();

        jScrollPane.revalidate();
        jScrollPane.validate();
        jScrollPane.repaint();
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void CargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CargarActionPerformed
        JFileChooser jf = new JFileChooser();
        jf.showOpenDialog(this);
        File archivo = jf.getSelectedFile();
        if (archivo != null) {
            Proyecto_2.avl.clear();

            Proyecto_2.listTree(archivo.getAbsolutePath());
            if (jCBTipo.getSelectedItem() == "Manual") {
                JOptionPane.showMessageDialog(null, "Datos cargados para insercion manual");
                as = Proyecto_2.doble.getFirst();

            } else if (jCBTipo.getSelectedItem() == "Automatico") {
                System.out.println("Automatico");
                NodeLD s = Proyecto_2.doble.getFirst();

                AutoAVL ac = new AutoAVL(jLabel, s, jSlider.getValue(), jLabelDesc, jLabelImage, jScrollPane);
                ac.start();

            }
        }
    }//GEN-LAST:event_CargarActionPerformed

    private void jButtonInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertActionPerformed
        //Inserta de uno en uno
        if (as != null) {
            ManualAVL mavl = new ManualAVL(jLabel, as, jSlider.getValue(), jLabelDesc, jLabelImage, jScrollPane);
            mavl.start();
            as = as.getNext();
        } else {
            JOptionPane.showMessageDialog(null, "Arbol terminado");
        }
    }//GEN-LAST:event_jButtonInsertActionPerformed

    private void jCBTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBTipoActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        int KeyCode = evt.getKeyCode();
        if (KeyCode == KeyEvent.VK_0) {
            ImageIcon icono = new ImageIcon("src\\Imagenes\\AVLTree.png");
            icono.getImage().flush();
            jLabelImage.setIcon(icono);
            jLabelImage.revalidate();
            jLabelImage.validate();
            jLabelImage.repaint();

            jScrollPane.revalidate();
            jScrollPane.validate();
            jScrollPane.repaint();
        }
    }//GEN-LAST:event_formKeyPressed

    private void jTextFieldDeleteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDeleteKeyPressed
        int KeyCode = evt.getKeyCode();
        if (KeyCode == KeyEvent.VK_ENTER) {
            ImageIcon icono = new ImageIcon("src\\Imagenes\\AVLTree.png");
            icono.getImage().flush();
            jLabelImage.setIcon(icono);
            jLabelImage.revalidate();
            jLabelImage.validate();
            jLabelImage.repaint();

            jScrollPane.revalidate();
            jScrollPane.validate();
            jScrollPane.repaint();
        }
    }//GEN-LAST:event_jTextFieldDeleteKeyPressed

    private void jButtonInordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInordenActionPerformed
        if (jCBTipo.getSelectedItem() == "Manual") {
            if (manualInorden < Proyecto_2.avl.inordenM().length) {
                flagInorden = false;
                ManualRecorridoAVL ac = new ManualRecorridoAVL(Proyecto_2.avl.inordenM(), jLabelImage, jSlider.getValue(), jLabelDesc, jLabelRecorrido, manualInorden, jScrollPane);
                ac.start();
                manualInorden++;
                if (manualInorden == Proyecto_2.avl.inordenM().length) {
                    flagInorden = true;
                }

            } else {
                Proyecto_2.avl.noVisit();
                manualInorden = 0;
                flagInorden = true;
                JOptionPane.showMessageDialog(null, "Recorrido terminado");
            }

        }
        if (jCBTipo.getSelectedItem() == "Automatico") {
            if (!flagInorden) {
                JOptionPane.showMessageDialog(null, "Termine de recorrer manualmente");
            } else {
                AutoRecorridoAVL ac = new AutoRecorridoAVL(Proyecto_2.avl.inordenM(), jLabelImage, jSlider.getValue(), jLabelDesc, jLabelRecorrido, jScrollPane);
                ac.start();
                flagInorden = true;
            }
        }
    }//GEN-LAST:event_jButtonInordenActionPerformed

    private void jButtonPostordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPostordenActionPerformed
        if (jCBTipo.getSelectedItem() == "Manual") {
            if (manualInorden < Proyecto_2.avl.postordenM().length) {
                flagInorden = false;
                ManualRecorridoAVL ac = new ManualRecorridoAVL(Proyecto_2.avl.postordenM(), jLabelImage, jSlider.getValue(), jLabelDesc, jLabelRecorrido, manualInorden, jScrollPane);
                ac.start();
                manualInorden++;
                if (manualInorden == Proyecto_2.avl.postordenM().length) {
                    flagInorden = true;
                }

            } else {
                Proyecto_2.avl.noVisit();
                manualInorden = 0;
                flagInorden = true;
                JOptionPane.showMessageDialog(null, "Recorrido terminado");
            }

        }
        if (jCBTipo.getSelectedItem() == "Automatico") {
            if (!flagInorden) {
                JOptionPane.showMessageDialog(null, "Termine de recorrer manualmente");
            } else {
                AutoRecorridoAVL ac = new AutoRecorridoAVL(Proyecto_2.avl.postordenM(), jLabelImage, jSlider.getValue(), jLabelDesc, jLabelRecorrido, jScrollPane);
                ac.start();
                flagInorden = true;
            }
        }
    }//GEN-LAST:event_jButtonPostordenActionPerformed

    private void jButtonPreordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPreordenActionPerformed
        if (jCBTipo.getSelectedItem() == "Manual") {
            if (manualInorden < Proyecto_2.avl.preordenM().length) {
                flagInorden = false;
                ManualRecorridoAVL ac = new ManualRecorridoAVL(Proyecto_2.avl.preordenM(), jLabelImage, jSlider.getValue(), jLabelDesc, jLabelRecorrido, manualInorden, jScrollPane);
                ac.start();
                manualInorden++;
                if (manualInorden == Proyecto_2.avl.preordenM().length) {
                    flagInorden = true;
                }

            } else {
                Proyecto_2.avl.noVisit();
                manualInorden = 0;
                flagInorden = true;
                JOptionPane.showMessageDialog(null, "Recorrido terminado");
            }

        }
        if (jCBTipo.getSelectedItem() == "Automatico") {
            if (!flagInorden) {
                JOptionPane.showMessageDialog(null, "Termine de recorrer manualmente");
            } else {
                AutoRecorridoAVL ac = new AutoRecorridoAVL(Proyecto_2.avl.preordenM(), jLabelImage, jSlider.getValue(), jLabelDesc, jLabelRecorrido, jScrollPane);
                ac.start();
                flagInorden = true;
            }
        }
    }//GEN-LAST:event_jButtonPreordenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AVLTree.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AVLTree.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AVLTree.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AVLTree.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                // new AVLTree(this.u).setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cargar;
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonInorden;
    private javax.swing.JButton jButtonInsert;
    private javax.swing.JButton jButtonPostorden;
    private javax.swing.JButton jButtonPreorden;
    private javax.swing.JComboBox jCBTipo;
    private javax.swing.JLabel jLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelDesc;
    private javax.swing.JLabel jLabelImage;
    private javax.swing.JLabel jLabelRecorrido;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JSlider jSlider;
    private javax.swing.JTextField jTextFieldDelete;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public void mostrar() {
        ImageIcon icono = new ImageIcon("src\\Imagenes\\AVLTree.png");
        icono.getImage().flush();
        jLabelImage.setIcon(icono);
        jLabelImage.revalidate();
        jLabelImage.validate();
        jLabelImage.repaint();

        jScrollPane.revalidate();
        jScrollPane.validate();
        jScrollPane.repaint();
    }
}
